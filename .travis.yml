# Project Configuration

# C++ Project
language: cpp

dist: trusty
sudo: required

# Build Job Matrix

jobs:
    include:

        # Valgrind
        - os: linux
          compiler: gcc
          addons:
              apt:
                  sources: ['ubuntu-toolchain-r-test']
                  packages: ['g++-7', 'cmake', 'ninja-build', 'valgrind']
          env:
              - COMPILER=g++-7 
              - CTEST_OPTIONS=-T memcheck
              - VALGRIND_ON=true 

        # Coveralls
        - os: linux
          compiler: gcc
          addons:
              apt:
                  sources: ['ubuntu-toolchain-r-test']
                  packages: ['g++-7', 'cmake', 'ninja-build']
          before_install:
              - pip install --user cpp-coveralls
          after_success:
              - coveralls --build-root test --include include --gcov 'gcov-7' --gcov-options '\-lp'
          env:
              - COMPILER=g++-7 
              - CMAKE_OPTIONS=-DCOVERAGE=ON


# Build Script

script:

    # set CXX to correct compiler
    - if [[ "${COMPILER}" != "" ]]; then
        export CXX=${COMPILER};
      fi 

    # show OS/compiler/cmake version
    - uname -a
    - ${CXX} --version
    - cmake --version

    # setup, clean build, and test
    - ./setup.sh
    - ./clean-build.sh debug ${CMAKE_OPTIONS}
    - ctest ${CTEST_OPTIONS} -j12

    # if testing valgrind
    - if [[ "${VALGRIND}" == "true" ]]; then
        cat ./Testing/Temporary/MemoryChecker.*.log;
      fi

    # change to root directory
    - cd ../../
