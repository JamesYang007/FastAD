# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = $(HOME)/googletest/googletest

# Where to find user code.
USER_DIR = ../

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -std=c++14 -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -pthread 

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS=dualnum_unittest \
	  advec_unittest \
	  admath_unittest \
	  adnode_unittest \
	  adeval_unittest \
	  ultimate_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# My Headers
MY_HEADERS = $(USER_DIR)/include/*.hpp

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o 

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I $(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I $(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

CXXFLAGS += -I$(USER_DIR)/include
#CPPFILEPATHS = $(shell echo $TEST | sed "s/^\(.*\)/$(USER_DIR)\/src\/\1/g;
#				s/[[:space:]]/ $(USER_DIR)\/src\//g;
#				s/[[:space:]]/.o /g;
#				s/\(.*\)/\1.o/g")

OFILES = $(shell echo $(TESTS) | sed "s/[[:space:]]/.o /g;s/\(.*\)/\1.o/g")


# adtest-valuetypes.o : $(USER_DIR)/src/utils_unittest.cpp $(USER_DIR)/include/utils.h $(GTEST_HEADERS) $(MY_HEADERS)
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sample1.cc

# dualnum
dualnum_unittest.o : $(USER_DIR)/src/dualnum_unittest.cpp \
					$(USER_DIR)/src/dualnum_unittest.hpp \
                     $(USER_DIR)/include/dualnum.hpp \
					 $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/dualnum_unittest.cpp

dualnum_unittest : dualnum_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# advec
advec_unittest.o : $(USER_DIR)/src/advec_unittest.cpp \
					$(USER_DIR)/src/advec_unittest.hpp \
                     $(USER_DIR)/include/advec.hpp \
                     $(USER_DIR)/include/adnode.hpp \
					 $(GTEST_HEADERS) 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/advec_unittest.cpp

advec_unittest : advec_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# admath
admath_unittest.o : $(USER_DIR)/src/admath_unittest.cpp \
					$(USER_DIR)/src/admath_unittest.hpp \
                     $(USER_DIR)/include/admath.hpp \
                     $(USER_DIR)/include/advec.hpp \
					 $(USER_DIR)/include/utility.hpp \
					 $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/admath_unittest.cpp

admath_unittest : admath_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# adnode
adnode_unittest.o : $(USER_DIR)/src/adnode_unittest.cpp \
					$(USER_DIR)/src/adnode_unittest.hpp \
                     $(USER_DIR)/include/adnode.hpp \
                     $(USER_DIR)/include/dualnum.hpp \
					 $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/adnode_unittest.cpp

adnode_unittest : adnode_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# adeval
adeval_unittest.o : $(USER_DIR)/src/adeval_unittest.cpp \
					$(USER_DIR)/src/adeval_unittest.hpp \
                     $(USER_DIR)/include/adeval.hpp \
                     $(USER_DIR)/include/adnode.hpp \
                     $(USER_DIR)/include/admath.hpp \
					 $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/adeval_unittest.cpp

adeval_unittest : adeval_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# ultimate
ultimate_unittest.o : $(USER_DIR)/src/ultimate_unittest.cpp \
					$(USER_DIR)/src/ultimate_unittest.hpp \
					 $(GTEST_HEADERS) 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/src/ultimate_unittest.cpp

ultimate_unittest : ultimate_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
