version: 2
jobs:
  build:
    docker:
      - image: buildpack-deps:trusty
   
    steps:
      - checkout
      - run:
          name: Install sudo
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Install ubuntu-toolchain-r/test and g++-7
          command: |
              sudo apt-get update
              sudo apt-get install -y software-properties-common
              sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
              sudo apt update
              sudo apt install g++-7 -y
      - run:
          name: Check g++ version
          command: |
              sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 \
                                       --slave /usr/bin/g++ g++ /usr/bin/g++-7 
              sudo update-alternatives --config gcc
              gcc --version
              g++ --version
      - run:
          name: Install CMake
          command: |
              sudo apt-get update
              version=3.9
              build=2
              mkdir ~/temp
              cd ~/temp
              wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz
              tar -xzvf cmake-$version.$build.tar.gz
              cd cmake-$version.$build/
              ./bootstrap
              make -j$(nproc)
              sudo make install
      - run:
          name: Install Ninja
          command: |
              sudo apt-get update
              sudo apt-get install -y ninja-build
      - run:
          name: Install Git
          command: |
              sudo apt-get update 
              sudo apt-get install -y git
      - run:
          name: Init Submodules
          command: 'git submodule init'
      - run:
          name: Setup
          command: './setup.sh dev'
      - run:
          name: Versions
          command: 'cmake --version; uname -a'
      - run:
          name: Compile
          command: './clean-build.sh release'
      - run:
          name: Execute test suite
          command: 'cd build/release ; ctest -j12'
